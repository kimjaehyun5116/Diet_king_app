{"ast":null,"code":"// functions/chatbot.js\n\nconst fetch = require(\"node-fetch\");\nexports.handler = async function (event, context) {\n  if (event.httpMethod !== \"POST\") {\n    return {\n      statusCode: 405,\n      body: JSON.stringify({\n        error: \"Method Not Allowed\"\n      })\n    };\n  }\n  const {\n    prompt\n  } = JSON.parse(event.body);\n  const apiKey = sk - XgQO7SxoaDhSr4zjWLdYT3BlbkFJVmA0Jf3dmsg6noy9pZvv;\n  const apiEndpoint = \"https://api.openai.com/v1/chat/completions\";\n  try {\n    const response = await fetch(apiEndpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${apiKey}`\n      },\n      body: JSON.stringify({\n        model: \"gpt-3.5-turbo\",\n        messages: [{\n          role: \"user\",\n          content: prompt\n        }],\n        temperature: 0.7,\n        max_tokens: 150,\n        top_p: 0.9,\n        frequency_penalty: 0.5,\n        presence_penalty: 0.3,\n        stop: [\"Human\"]\n      })\n    });\n    if (!response.ok) {\n      throw new Error(\"OpenAI API 호출 중 오류 발생\");\n    }\n    const data = await response.json();\n    const aiResponse = data.choices[0].message.content;\n    return {\n      statusCode: 200,\n      body: JSON.stringify({\n        aiResponse\n      })\n    };\n  } catch (error) {\n    console.error(\"OpenAI API 호출 중 오류 발생:\", error);\n    return {\n      statusCode: 500,\n      body: JSON.stringify({\n        error: \"OpenAI API 호출 중 오류 발생\"\n      })\n    };\n  }\n};","map":{"version":3,"names":["fetch","require","exports","handler","event","context","httpMethod","statusCode","body","JSON","stringify","error","prompt","parse","apiKey","sk","XgQO7SxoaDhSr4zjWLdYT3BlbkFJVmA0Jf3dmsg6noy9pZvv","apiEndpoint","response","method","headers","Authorization","model","messages","role","content","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","stop","ok","Error","data","json","aiResponse","choices","message","console"],"sources":["/Users/ethankim/Aiproject/src/chatbot.js"],"sourcesContent":["// functions/chatbot.js\n\nconst fetch = require(\"node-fetch\");\n\nexports.handler = async function (event, context) {\n  if (event.httpMethod !== \"POST\") {\n    return {\n      statusCode: 405,\n      body: JSON.stringify({ error: \"Method Not Allowed\" }),\n    };\n  }\n\n  const { prompt } = JSON.parse(event.body);\n  const apiKey = sk - XgQO7SxoaDhSr4zjWLdYT3BlbkFJVmA0Jf3dmsg6noy9pZvv;\n  const apiEndpoint = \"https://api.openai.com/v1/chat/completions\";\n\n  try {\n    const response = await fetch(apiEndpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${apiKey}`,\n      },\n      body: JSON.stringify({\n        model: \"gpt-3.5-turbo\",\n        messages: [\n          {\n            role: \"user\",\n            content: prompt,\n          },\n        ],\n        temperature: 0.7,\n        max_tokens: 150,\n        top_p: 0.9,\n        frequency_penalty: 0.5,\n        presence_penalty: 0.3,\n        stop: [\"Human\"],\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error(\"OpenAI API 호출 중 오류 발생\");\n    }\n\n    const data = await response.json();\n    const aiResponse = data.choices[0].message.content;\n\n    return {\n      statusCode: 200,\n      body: JSON.stringify({ aiResponse }),\n    };\n  } catch (error) {\n    console.error(\"OpenAI API 호출 중 오류 발생:\", error);\n\n    return {\n      statusCode: 500,\n      body: JSON.stringify({ error: \"OpenAI API 호출 중 오류 발생\" }),\n    };\n  }\n};\n"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,YAAY,CAAC;AAEnCC,OAAO,CAACC,OAAO,GAAG,gBAAgBC,KAAK,EAAEC,OAAO,EAAE;EAChD,IAAID,KAAK,CAACE,UAAU,KAAK,MAAM,EAAE;IAC/B,OAAO;MACLC,UAAU,EAAE,GAAG;MACfC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,KAAK,EAAE;MAAqB,CAAC;IACtD,CAAC;EACH;EAEA,MAAM;IAAEC;EAAO,CAAC,GAAGH,IAAI,CAACI,KAAK,CAACT,KAAK,CAACI,IAAI,CAAC;EACzC,MAAMM,MAAM,GAAGC,EAAE,GAAGC,gDAAgD;EACpE,MAAMC,WAAW,GAAG,4CAA4C;EAEhE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACiB,WAAW,EAAE;MACxCE,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,UAAUP,MAAM;MACjC,CAAC;MACDN,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBY,KAAK,EAAE,eAAe;QACtBC,QAAQ,EAAE,CACR;UACEC,IAAI,EAAE,MAAM;UACZC,OAAO,EAAEb;QACX,CAAC,CACF;QACDc,WAAW,EAAE,GAAG;QAChBC,UAAU,EAAE,GAAG;QACfC,KAAK,EAAE,GAAG;QACVC,iBAAiB,EAAE,GAAG;QACtBC,gBAAgB,EAAE,GAAG;QACrBC,IAAI,EAAE,CAAC,OAAO;MAChB,CAAC;IACH,CAAC,CAAC;IAEF,IAAI,CAACb,QAAQ,CAACc,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C;IAEA,MAAMC,IAAI,GAAG,MAAMhB,QAAQ,CAACiB,IAAI,CAAC,CAAC;IAClC,MAAMC,UAAU,GAAGF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACb,OAAO;IAElD,OAAO;MACLlB,UAAU,EAAE,GAAG;MACfC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE0B;MAAW,CAAC;IACrC,CAAC;EACH,CAAC,CAAC,OAAOzB,KAAK,EAAE;IACd4B,OAAO,CAAC5B,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAE9C,OAAO;MACLJ,UAAU,EAAE,GAAG;MACfC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,KAAK,EAAE;MAAwB,CAAC;IACzD,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}